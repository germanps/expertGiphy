{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","className","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifts","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAoCeA,EAjCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAgBvC,OACI,yBAAKC,UAAU,eACX,0BAAMC,SAXO,SAACC,GAClBA,EAAEC,iBACEL,EAAWM,OAAOC,OAAS,IAC3BT,GAAe,SAAAU,GAAI,OAAKR,GAAL,mBAAoBQ,OAEvCP,EAAc,OAOV,2BACIQ,KAAK,OACLC,MAAQV,EACRW,SAlBU,SAACP,GACvBH,EAAcG,EAAEQ,OAAOF,a,uBCSlBG,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEdC,EAFc,iDAEmCC,UAAWH,GAF9C,+DAGDI,MAAOF,GAHN,cAGdG,EAHc,gBAIGA,EAAKC,OAJR,uBAIZC,EAJY,EAIZA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVtB,kBAcbM,GAda,4CAAH,sDCJNO,EAXK,SAAC,GAA0B,IAAvBJ,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAG/B,OACI,yBAAKd,UAAU,kEAAkEuB,GAAIA,GACjF,4BAAKC,GACL,yBAAKI,IAAKd,EAAKe,IAAKL,MCwBjBM,EA5BC,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAAe,ECDN,SAAEA,GAAe,IAAD,EAEdf,mBAAS,CAC/BsB,KAAM,GACNY,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAmBxC,OAZAC,qBAAW,WACPvB,EAASC,GACJuB,MAAM,SAAAC,GACHH,EAAS,CACLd,KAAMiB,EACNL,SAAS,SAGtB,CAACnB,IAIGoB,EDhB2BK,CAAczB,GAAlCa,EAFgB,EAEtBN,KAAcY,EAFQ,EAERA,QAGtB,OACI,oCACI,wBAAI/B,UAAU,oCAAoCY,GAChDmB,GAAW,yCACb,yBAAK/B,UAAU,WAIHyB,EAAOJ,KAAK,SAAAC,GACR,OACI,kBAAC,EAAD,eACIgB,IAAKhB,EAAIC,IACLD,UEKzBiB,EAtBM,WAAO,IAAD,EACa1C,mBAAS,CAAC,SADvB,mBAChB2C,EADgB,KACJ5C,EADI,KAGvB,OACI,yBAAKI,UAAU,gBACX,4CACA,kBAAC,EAAD,CAAaJ,cAAgBA,IAC7B,6BACA,4BAEQ4C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACI0B,IAAK1B,EACLA,SAAUA,U,MCXtC6B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.db0e80f4.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleChangeValue = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if( inputValue.trim().length > 2){\r\n            setCategories( cats => [inputValue, ...cats]);\r\n            //reset input\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"addCategory\">\r\n            <form onSubmit={ handleSubmit }>\r\n                <input \r\n                    type=\"text\"\r\n                    value={ inputValue }\r\n                    onChange={ handleChangeValue }\r\n                />\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;","\r\n// export const getGifts = async(category) =>{\r\n//     const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=sL1shnpjFtZhUFi6KHIxDzFizDcpt3md`;\r\n//     const resp = await fetch( url );\r\n//     const {data} = await resp.json();\r\n\r\n//     const gifs = data.map( img => {\r\n//         return{\r\n//             id: img.id,\r\n//             title: img.title,\r\n//             url: img.images?.downsized_medium.url\r\n//         }\r\n//     })\r\n\r\n//     return gifs;\r\n// }\r\n\r\nexport const getGifts = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=A8xMXqzieIHmtO3BjGLAtf1daSSDAv8K`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n\r\n}","import React from 'react'\r\n\r\nconst GifGridItem = ( { id, title, url } ) => {\r\n\r\n    \r\n    return (\r\n        <div className=\"gifGridItem animate__animated animate__fadeIn animate__delay-1s\" id={id}>\r\n            <h4>{title}</h4>\r\n            <img src={url} alt={title} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n    const { data: images, loading } = useFetchGifs( category );\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__flash\">{category}</h3>\r\n            { loading && <p>Loading...</p>}\r\n            <div className=\"gifGrid\">\r\n                \r\n                \r\n                    {\r\n                        images.map( img => {                       \r\n                            return(\r\n                                <GifGridItem\r\n                                    key={img.id} \r\n                                    {...img}\r\n                                /> \r\n                            );\r\n                        })\r\n                    }\r\n            \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid;","import { useState, useEffect } from \"react\";\r\nimport { getGifts } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifts(category)\r\n            .then( imgs => {          \r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });               \r\n            });\r\n    }, [category]);//si cambia la categoria se dispararÃ¡ otra vez el useEffect\r\n\r\n    \r\n\r\n    return state; // { data: [], loding: true }\r\n}","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n    const [categories, setCategories] = useState(['rock']);\r\n\r\n    return(\r\n        <div className=\"gifExpertApp\">\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categories.map( category => ( \r\n                        <GifGrid\r\n                            key={category} \r\n                            category={category} \r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}